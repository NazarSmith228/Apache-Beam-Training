/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package job.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class WordStatistics extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6339624411959176573L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WordStatistics\",\"namespace\":\"aggregator.model\",\"fields\":[{\"name\":\"wordsFromAToH\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"wordsFromIToQ\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"default\":null},{\"name\":\"wordsFromRToZ\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"avro.java.string\":\"String\"},\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<WordStatistics> ENCODER =
      new BinaryMessageEncoder<WordStatistics>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<WordStatistics> DECODER =
      new BinaryMessageDecoder<WordStatistics>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<WordStatistics> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<WordStatistics> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<WordStatistics>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this WordStatistics to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a WordStatistics from a ByteBuffer. */
  public static WordStatistics fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromAToH;
  @Deprecated public java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromIToQ;
  @Deprecated public java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromRToZ;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public WordStatistics() {}

  /**
   * All-args constructor.
   * @param wordsFromAToH The new value for wordsFromAToH
   * @param wordsFromIToQ The new value for wordsFromIToQ
   * @param wordsFromRToZ The new value for wordsFromRToZ
   */
  public WordStatistics(java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromAToH, java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromIToQ, java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromRToZ) {
    this.wordsFromAToH = wordsFromAToH;
    this.wordsFromIToQ = wordsFromIToQ;
    this.wordsFromRToZ = wordsFromRToZ;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return wordsFromAToH;
    case 1: return wordsFromIToQ;
    case 2: return wordsFromRToZ;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: wordsFromAToH = (java.util.Map<java.lang.String,java.util.List<java.lang.String>>)value$; break;
    case 1: wordsFromIToQ = (java.util.Map<java.lang.String,java.util.List<java.lang.String>>)value$; break;
    case 2: wordsFromRToZ = (java.util.Map<java.lang.String,java.util.List<java.lang.String>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'wordsFromAToH' field.
   * @return The value of the 'wordsFromAToH' field.
   */
  public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getWordsFromAToH() {
    return wordsFromAToH;
  }

  /**
   * Sets the value of the 'wordsFromAToH' field.
   * @param value the value to set.
   */
  public void setWordsFromAToH(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
    this.wordsFromAToH = value;
  }

  /**
   * Gets the value of the 'wordsFromIToQ' field.
   * @return The value of the 'wordsFromIToQ' field.
   */
  public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getWordsFromIToQ() {
    return wordsFromIToQ;
  }

  /**
   * Sets the value of the 'wordsFromIToQ' field.
   * @param value the value to set.
   */
  public void setWordsFromIToQ(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
    this.wordsFromIToQ = value;
  }

  /**
   * Gets the value of the 'wordsFromRToZ' field.
   * @return The value of the 'wordsFromRToZ' field.
   */
  public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getWordsFromRToZ() {
    return wordsFromRToZ;
  }

  /**
   * Sets the value of the 'wordsFromRToZ' field.
   * @param value the value to set.
   */
  public void setWordsFromRToZ(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
    this.wordsFromRToZ = value;
  }

  /**
   * Creates a new WordStatistics RecordBuilder.
   * @return A new WordStatistics RecordBuilder
   */
  public static job.model.WordStatistics.Builder newBuilder() {
    return new job.model.WordStatistics.Builder();
  }

  /**
   * Creates a new WordStatistics RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new WordStatistics RecordBuilder
   */
  public static job.model.WordStatistics.Builder newBuilder(job.model.WordStatistics.Builder other) {
    return new job.model.WordStatistics.Builder(other);
  }

  /**
   * Creates a new WordStatistics RecordBuilder by copying an existing WordStatistics instance.
   * @param other The existing instance to copy.
   * @return A new WordStatistics RecordBuilder
   */
  public static job.model.WordStatistics.Builder newBuilder(job.model.WordStatistics other) {
    return new job.model.WordStatistics.Builder(other);
  }

  /**
   * RecordBuilder for WordStatistics instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WordStatistics>
    implements org.apache.avro.data.RecordBuilder<WordStatistics> {

    private java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromAToH;
    private java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromIToQ;
    private java.util.Map<java.lang.String,java.util.List<java.lang.String>> wordsFromRToZ;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(job.model.WordStatistics.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.wordsFromAToH)) {
        this.wordsFromAToH = data().deepCopy(fields()[0].schema(), other.wordsFromAToH);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wordsFromIToQ)) {
        this.wordsFromIToQ = data().deepCopy(fields()[1].schema(), other.wordsFromIToQ);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.wordsFromRToZ)) {
        this.wordsFromRToZ = data().deepCopy(fields()[2].schema(), other.wordsFromRToZ);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing WordStatistics instance
     * @param other The existing instance to copy.
     */
    private Builder(job.model.WordStatistics other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.wordsFromAToH)) {
        this.wordsFromAToH = data().deepCopy(fields()[0].schema(), other.wordsFromAToH);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.wordsFromIToQ)) {
        this.wordsFromIToQ = data().deepCopy(fields()[1].schema(), other.wordsFromIToQ);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.wordsFromRToZ)) {
        this.wordsFromRToZ = data().deepCopy(fields()[2].schema(), other.wordsFromRToZ);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'wordsFromAToH' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getWordsFromAToH() {
      return wordsFromAToH;
    }

    /**
      * Sets the value of the 'wordsFromAToH' field.
      * @param value The value of 'wordsFromAToH'.
      * @return This builder.
      */
    public job.model.WordStatistics.Builder setWordsFromAToH(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
      validate(fields()[0], value);
      this.wordsFromAToH = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'wordsFromAToH' field has been set.
      * @return True if the 'wordsFromAToH' field has been set, false otherwise.
      */
    public boolean hasWordsFromAToH() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'wordsFromAToH' field.
      * @return This builder.
      */
    public job.model.WordStatistics.Builder clearWordsFromAToH() {
      wordsFromAToH = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'wordsFromIToQ' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getWordsFromIToQ() {
      return wordsFromIToQ;
    }

    /**
      * Sets the value of the 'wordsFromIToQ' field.
      * @param value The value of 'wordsFromIToQ'.
      * @return This builder.
      */
    public job.model.WordStatistics.Builder setWordsFromIToQ(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
      validate(fields()[1], value);
      this.wordsFromIToQ = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'wordsFromIToQ' field has been set.
      * @return True if the 'wordsFromIToQ' field has been set, false otherwise.
      */
    public boolean hasWordsFromIToQ() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'wordsFromIToQ' field.
      * @return This builder.
      */
    public job.model.WordStatistics.Builder clearWordsFromIToQ() {
      wordsFromIToQ = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'wordsFromRToZ' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.util.List<java.lang.String>> getWordsFromRToZ() {
      return wordsFromRToZ;
    }

    /**
      * Sets the value of the 'wordsFromRToZ' field.
      * @param value The value of 'wordsFromRToZ'.
      * @return This builder.
      */
    public job.model.WordStatistics.Builder setWordsFromRToZ(java.util.Map<java.lang.String,java.util.List<java.lang.String>> value) {
      validate(fields()[2], value);
      this.wordsFromRToZ = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'wordsFromRToZ' field has been set.
      * @return True if the 'wordsFromRToZ' field has been set, false otherwise.
      */
    public boolean hasWordsFromRToZ() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'wordsFromRToZ' field.
      * @return This builder.
      */
    public job.model.WordStatistics.Builder clearWordsFromRToZ() {
      wordsFromRToZ = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public WordStatistics build() {
      try {
        WordStatistics record = new WordStatistics();
        record.wordsFromAToH = fieldSetFlags()[0] ? this.wordsFromAToH : (java.util.Map<java.lang.String,java.util.List<java.lang.String>>) defaultValue(fields()[0]);
        record.wordsFromIToQ = fieldSetFlags()[1] ? this.wordsFromIToQ : (java.util.Map<java.lang.String,java.util.List<java.lang.String>>) defaultValue(fields()[1]);
        record.wordsFromRToZ = fieldSetFlags()[2] ? this.wordsFromRToZ : (java.util.Map<java.lang.String,java.util.List<java.lang.String>>) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<WordStatistics>
    WRITER$ = (org.apache.avro.io.DatumWriter<WordStatistics>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<WordStatistics>
    READER$ = (org.apache.avro.io.DatumReader<WordStatistics>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
